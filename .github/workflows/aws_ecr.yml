name: ECR actions

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-southeast-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY # set this to your Amazon ECR repository name

jobs:
  CICD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR
          # docker build --platform Linux/amd64 --provenance false -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build --platform Linux/amd64 --provenance false -t flask_app_ecr .
          docker tag flask_app_ecr:${{ github.sha }} 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/flask_app_ecr:${{ github.sha }}
          docker push 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/ flask_app_ecr:${{ github.sha }}
          # echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
